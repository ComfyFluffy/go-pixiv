package pixiv

import "fmt"

// Generated by https://quicktype.io

// RespAuth is the response from:
//  POST https://oauth.secure.pixiv.net/auth/token
type RespAuth struct {
	Response struct {
		AccessToken  string `json:"access_token"`
		ExpiresIn    int    `json:"expires_in"`
		TokenType    string `json:"token_type"`
		Scope        string `json:"scope"`
		RefreshToken string `json:"refresh_token"`
		User         struct {
			ProfileImageURLs struct {
				PX16X16   string `json:"px_16x16"`
				PX50X50   string `json:"px_50x50"`
				PX170X170 string `json:"px_170x170"`
			} `json:"profile_image_urls"`

			// The ID in original response is of the type string
			ID string `json:"id"`

			Name                   string `json:"name"`
			Account                string `json:"account"`
			MailAddress            string `json:"mail_address"`
			IsPremium              bool   `json:"is_premium"`
			XRestrict              int    `json:"x_restrict"`
			IsMailAuthorized       bool   `json:"is_mail_authorized"`
			RequirePolicyAgreement bool   `json:"require_policy_agreement"`
		} `json:"user"`
		DeviceToken string `json:"device_token"`
	} `json:"response"`
}

// ErrAuth is the errors of RespAuthLogin
type ErrAuth struct {
	HasError bool `json:"has_error"`
	Errors   struct {
		System struct {
			Code    int    `json:"code"`
			Message string `json:"message"`
		} `json:"system"`
	} `json:"errors"`
}

func (e *ErrAuth) Error() string {
	return fmt.Sprintf("pixiv: %d - %s", e.Errors.System.Code, e.Errors.System.Message)
}

type ErrAppAPI struct {
	Error struct {
		UserMessage        string `json:"user_message"`
		Message            string `json:"message"`
		Reason             string `json:"reason"`
		UserMessageDetails struct {
		} `json:"user_message_details"`
	} `json:"error"`
}

// RespComments is the response from:
//  https://app-api.pixiv.net/v2/illust/comments?illust_id=...
//  https://app-api.pixiv.net/v2/novel/comments?novel_id=...
//  https://app-api.pixiv.net/v1/illust/comment/replies?comment_id=...
type RespComments struct {
	Comments []Comment `json:"comments"`
	NextURL  string    `json:"next_url"`
}

// RespNovels is the response from:
//
//  https://app-api.pixiv.net/v1/user/novels?user_id=...
//  https://app-api.pixiv.net/v1/user/bookmarks/novel?user_id=...&restrict=...
type RespNovels struct {
	Novels        []Novel `json:"novels"`
	RankingNovels []Novel `json:"ranking_novels"`
	// PrivacyPolicy PrivacyPolicy `json:"privacy_policy"`
	NextURL string `json:"next_url"`
}

// RespNovelText is the response from:
//
//  https://app-api.pixiv.net/v1/novel/text?novel_id=...
type RespNovelText struct {
	NovelMarker NovelMarker `json:"novel_marker"`

	NovelText  string `json:"novel_text"`
	SeriesPrev Novel  `json:"series_prev"`
	SeriesNext Novel  `json:"series_next"`
}

// RespIllusts is the response from:
//
//  https://app-api.pixiv.net/v2/illust/mypixiv
//  https://app-api.pixiv.net/v1/illust/new?content_type=...
//  https://app-api.pixiv.net/v1/user/illusts?user_id=...&type=...
type RespIllusts struct {
	Illusts []Illust `json:"illusts"`
	NextURL string   `json:"next_url"`
}

// RespUserDetail is the response from:
//
//  https://app-api.pixiv.net/v1/user/detail?user_id=...
type RespUserDetail struct {
	User             User              `json:"user"`
	Profile          Profile           `json:"profile"`
	ProfilePublicity ProfilePublicity  `json:"profile_publicity"`
	Workspace        map[string]string `json:"workspace"`
}
